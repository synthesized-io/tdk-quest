version: '3.5'

services:

  input_db:
    container_name: input_db
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - ./pagila-schema.sql:/docker-entrypoint-initdb.d/1.sql
    ports: [ "6000:5432" ]
    healthcheck:
      test: "pg_isready -d postgres -q -U ${POSTGRES_USER:-postgres}"
      interval: "3s"
      timeout: "3s"
      start_period: "3s"
      retries: 30

  output_db:
    container_name: output_db
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - ./pagila-output-db-scripts.sql:/docker-entrypoint-initdb.d/1.sql
    ports: [ "6001:5432" ]
    healthcheck:
      test: "pg_isready -d postgres -q -U ${POSTGRES_USER:-postgres}"
      interval: "3s"
      timeout: "3s"
      start_period: "3s"
      retries: 30


  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: postgres
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ./pgadmin.json:/pgadmin4/servers.json
    ports:
      - "8888:80"
    depends_on:
      input_db:
        condition: service_healthy
      output_db:
        condition: service_healthy


  databases:
    container_name: databases
    image: docker/whalesay
    command: >
      cowsay
        "Both databases have been started and are ready for TDK exercises!"
    depends_on:
      input_db:
        condition: service_healthy
      output_db:
        condition: service_healthy


  tdk: &tdk
    container_name: tdk
    image: synthesizedio/synthesized-tdk-cli:latest
    environment:
      SYNTHESIZED_INPUT_URL: jdbc:postgresql://input_db:5432/postgres
      SYNTHESIZED_INPUT_USERNAME: postgres
      SYNTHESIZED_INPUT_PASSWORD: postgres
      SYNTHESIZED_OUTPUT_URL: jdbc:postgresql://output_db:5432/postgres
      SYNTHESIZED_OUTPUT_USERNAME: postgres
      SYNTHESIZED_OUTPUT_PASSWORD: postgres
      SYNTHESIZED_USERCONFIG_FILE: /app/config.yaml
      TDK_WORKINGDIRECTORY_PATH: /app/data
      TDK_WORKINGDIRECTORY_ENABLED: "true"
      JAVA_TOOL_OPTIONS: >
        -Dlogging.level.io.synthesized.tdk.executor.lite.LiteTransformer=INFO
        -Dlogging.level.io.synthesized.tdk=WARN
        -Dlogging.level.com.zaxxer.hikari=WARN
        -Dlogging.level.org.reflections=WARN
        -Dlogging.level.org.jooq=WARN
        -XX:+UseContainerSupport
        -XX:MaxRAMPercentage=80.0
        -Dspring.main.banner-mode=CONSOLE
        -Dspring.banner.location=file:/app/banner.txt
    volumes:
      - ./${CONFIG_FILE}:/app/config.yaml
      - ./banner.txt:/app/banner.txt
      - ./logback-lite-executor.xml:/app/logback-lite-executor.xml
    depends_on:
      databases:
        condition: service_completed_successfully


  tdk_admin:
    <<: *tdk
    depends_on:
      pgadmin:
        condition: service_started


  check:
    container_name: check
    image: sodadata/soda-core
    volumes:
      - ./soda:/sodacl
